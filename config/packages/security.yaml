security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\User:
      algorithm: bcrypt

  providers:
    #in_memory: { memory: null }
    users:
      entity:
        # the class of the entity that represents users
        class: 'App\Entity\User'

        # the property to query by - e.g. username, email, etc
        property: 'email'
        # optional: if you're using multiple Doctrine entity
        # managers, this option defines which one to use
        # manager_name: 'customer
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        target: /
        # where to redirect after logout
        # target: app_any_route

      #            remember_me:
      #                secret:   '%kernel.secret%'
      #                lifetime: 2592000 # 30 days in seconds
      #                secret:   '%kernel.secret%'
      #                lifetime: 2592000
      #                path: /
      #                domain: ~
      #                    secure:   true
      #                name: REMEMBERME
      #                remember_me_parameter: _remember_me
      #                    always_remember_me: true


      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # but, definitely allow /login to be accessible anonymously
  - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
